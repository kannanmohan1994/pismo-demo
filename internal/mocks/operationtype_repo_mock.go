// Code generated by MockGen. DO NOT EDIT.
// Source: pismo/internal/repo/operationtype (interfaces: OperationTypeRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "pismo/internal/entity/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOperationTypeRepository is a mock of OperationTypeRepository interface.
type MockOperationTypeRepository struct {
	ctrl     *gomock.Controller
	recorder *MockOperationTypeRepositoryMockRecorder
}

// MockOperationTypeRepositoryMockRecorder is the mock recorder for MockOperationTypeRepository.
type MockOperationTypeRepositoryMockRecorder struct {
	mock *MockOperationTypeRepository
}

// NewMockOperationTypeRepository creates a new mock instance.
func NewMockOperationTypeRepository(ctrl *gomock.Controller) *MockOperationTypeRepository {
	mock := &MockOperationTypeRepository{ctrl: ctrl}
	mock.recorder = &MockOperationTypeRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOperationTypeRepository) EXPECT() *MockOperationTypeRepositoryMockRecorder {
	return m.recorder
}

// GetOperationType mocks base method.
func (m *MockOperationTypeRepository) GetOperationType(arg0 context.Context, arg1 int) (*models.OperationType, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOperationType", arg0, arg1)
	ret0, _ := ret[0].(*models.OperationType)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOperationType indicates an expected call of GetOperationType.
func (mr *MockOperationTypeRepositoryMockRecorder) GetOperationType(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOperationType", reflect.TypeOf((*MockOperationTypeRepository)(nil).GetOperationType), arg0, arg1)
}
